{"version":3,"sources":["services/MovieService.js","components/MovieDetails.js","components/MovieModal.js","components/SearchBar.js","components/MovieCard.js","services/userMovieList.service.js","components/Pagination.js","components/MovieList.js","components/UserMovieList.js","components/Nav.js","index.js"],"names":["apiKey","searchService","MovieService","id","a","axios","get","then","res","data","catch","err","console","error","title","page","MovieDetails","useState","movie","setMovie","movieService","useEffect","getMovieById","src","Poster","alt","Title","Ratings","Value","Rated","Runtime","Genre","Plot","Actors","MovieModal","show","onClose","children","className","tabIndex","style","display","type","onClick","SearchBar","onSearch","setTitle","Form","onSubmit","e","preventDefault","onFormSubmit","FormGroup","FormLabel","htmlFor","FormControl","name","onChange","target","value","Button","disabled","MovieCard","setSelectedMovie","onAddToMovieList","onDeleteClick","imdbID","variant","UserMovieListService","movieList","localStorage","getItem","JSON","parse","list","push","setItem","stringify","updatedList","filter","Pagination","condition","pageCount","getMoviesByPage","currentPage","restrictedValues","PaginationButton","includes","MovieList","userMovieListService","selectedMovie","setMovieList","setPageCount","movieTitle","setMovieTitle","setCurrentPage","addMovieToList","getMoviesByTitle","log","getMovieByTitle","Math","ceil","totalResults","Search","map","UserMovieList","userMovieList","setUserMovieList","getMovieList","deleteMovieFromList","removeMovieFromList","Nav","Navbar","bg","Container","Brand","Collapse","Link","href","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.8f778cbb.chunk.js","sourcesContent":["import axios from 'axios';\nconst apiKey = '379060c8';\nconst searchService = 'https://www.omdbapi.com/';\n\nexport default class MovieService {\n    async getMovieById(id) {\n        return axios.get(`${searchService}?i=${id}&apikey=${apiKey}`)\n                .then((res) => res.data)      \n                .catch((err) => console.error(err));       \n    }\n    async getMovieByTitle(title, page = 1) {\n        return axios.get(`${searchService}?s=${title}&page=${page}&apikey=${apiKey}`)\n                .then((res) => res.data)      \n                .catch((err) => console.error(err));       \n    }\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport MovieService from '../services/MovieService';\n\n// Class based components\nconst MovieDetails = ({ id }) => {\n  const [ movie, setMovie ] = useState();\n  const movieService = new MovieService();\n\n  useEffect(() => {\n    getMovieById(id);\n  }, [id]);\n\n  const getMovieById = async (id) => {\n    const movie = await movieService.getMovieById(id);\n    setMovie(movie);\n  }\n\n  return movie ? (\n    <div>\n        <img src={movie.Poster} alt={`${movie.Title} poster`} />\n        <div>\n            <div>\n                <h2>{movie.Title}</h2>\n                <span>\n                    { movie.Ratings[0].Value}\n                    : \"N/A\"\n                </span>\n            </div>\n            <div>\n              <span>\n              { movie.Rated}\n            </span>\n            <span>\n              { movie.Runtime }\n            </span>\n            <span>\n               { movie.Genre}\n            </span>            \n        </div>\n        <div>\n          <h4>Plot</h4>\n          {movie.Plot}\n        </div>\n          <h4>Actors</h4>\n          { movie.Actors}  \n      </div>\n    </div>\n  ) : (<h2>Loading...</h2>);\n  }\n\n  export default MovieDetails;","import React from 'react';\n\nconst MovieModal = ({show, onClose, children }) => {          \n\n  return show ? (\n    <div className=\"modal fade show\" id=\"exampleModal\" tabIndex=\"-1\" style={{display: 'block'}}>\n      <div className=\"modal-dialog modal-lg modal-dialog-scrollable\">\n        <div className=\"modal-content p-0\">\n          <div className=\"modal-header\">\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={onClose}></button>\n          </div>\n              <div className=\"modal-body\">\n              {children}\n              </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\"  data-bs-dismiss=\"modal\" onClick={onClose} className=\"text-danger\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ): null;\n}\n\nexport default MovieModal;","import { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel  from \"react-bootstrap/FormLabel\";\nimport Button from \"react-bootstrap/Button\"\n\nexport const SearchBar = ({onSearch}) => {\n    const [title, setTitle] = useState();\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        onSearch(title);\n    }\n  \n   return (\n       <div>\n           <Form onSubmit={(e) => onFormSubmit(e)}>\n               <FormGroup> \n                   <FormLabel  htmlFor=\"title\" className=\"text-danger\">Title</FormLabel>\n                   <FormControl\n                        type=\"text\"\n                        name=\"title\"\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <Button type='submit' disabled ={ !title }>Search</Button>\n               </FormGroup>\n               \n           </Form>\n       </div>\n   ) \n}   \nexport default SearchBar","import Button from \"react-bootstrap/Button\";\n// import StyledButtonContainer from \"./styled\";\n\nexport const MovieCard = ({ movie, setSelectedMovie, onAddToMovieList, onDeleteClick }) => {\n    return(\n        <div>\n                            \n        <img src= {movie.Poster} alt={`${movie.Title} poster`} />\n                <div>\n                    <h4>{movie.Title}</h4>   \n      \n                <Button btn-primary\n                        onClick={() => setSelectedMovie(movie.imdbID)}\n                    >Show Details</Button>\n                    {onAddToMovieList && \n                <Button btn-success\n                    onClick={() => onAddToMovieList(movie.imdbID)}\n                    >Add Movie To My List</Button>\n                    }\n                {\n                onDeleteClick &&\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => onDeleteClick(movie.imdbID)}\n                    >Remove From List</Button>\n                }\n\n\n    \n                     \n\n                   \n                 </div>    \n            </div>  \n    )\n}\nexport default MovieCard;","export default class UserMovieListService {\n        addMovieToList(movie) {\n        let movieList = localStorage.getItem('movieList');\n        if (movieList) {\n            movieList = JSON.parse(movieList);\n            movieList.list.push(movie);\n        };\n        if (!movieList) movieList = { list: [ movie ] };\n        localStorage.setItem('movieList', JSON.stringify(movieList));\n    }\n\n    removeMovieFromList(id) {\n        const movieList = JSON.parse(localStorage.getItem('movieList'));\n        const updatedList = movieList.list.filter((movie) => movie.imdbID !== id);\n        movieList.list = updatedList;\n        localStorage.setItem('movieList', JSON.stringify(movieList));\n    }\n\n    getMovieList() {\n        let movieList=localStorage.getItem('movieList');\n        if(!movieList) return null;\n\n        return JSON.parse(movieList);\n    }\n}\n","import { useState } from 'react';\nimport button from \"react-bootstrap/Button\";\nimport styled from 'styled-components';\n\n\nexport const Pagination = ({pageCount, getMoviesByPage, currentPage}) => {\n\n    \n\n    const restrictedValues = [1, 2, pageCount-2, pageCount-1, pageCount];\n\n        \n    const PaginationButton = ({ page }) => (\n        <button  btn-primary      \n            disabled={page === currentPage}\n            onClick={() => getMoviesByPage(page)}\n        >{ `${page}` }</button>\n    );\n\n    const renderButtonsConditionally = (condition) => (\n        condition\n            ? (\n                <>\n                    <PaginationButton page={currentPage + 1} />\n                    <PaginationButton page={currentPage +2 } />\n                    <PaginationButton page={currentPage +3 } />\n                </>\n            )\n            : null\n    )\n    return (\n        <div>\n            <div>\n                <button btn-primary\n                    onClick={() => getMoviesByPage(currentPage - 1)}\n                    disabled={currentPage  === 1}>\n                    Back\n                </button>\n                <span>Page {currentPage}</span>\n                <button btn-primary\n                    onClick={() => getMoviesByPage(currentPage + 1)}\n                    disabled={currentPage === pageCount}>\n                    Forward\n                </button>\n            </div>\n            <div>\n                <PaginationButton page={1}/>\n                <PaginationButton page={2}/>\n                <PaginationButton page={3}/>\n                { currentPage > 4 && <span>...</span> }\n                {\n                    renderButtonsConditionally(!restrictedValues.includes(currentPage))\n                }\n                { currentPage !== pageCount-3 && <span>...</span> }\n                <PaginationButton page={pageCount-2}/>\n                <PaginationButton page={pageCount-1}/>\n                <PaginationButton page={pageCount}/>\n            </div>\n        </div>\n    )\n}\nexport default Pagination;","import React, { useState } from 'react';\nimport  MovieDetails  from './MovieDetails';\nimport MovieModal from './MovieModal';\nimport MovieService  from  '../services/MovieService';\nimport  SearchBar  from './SearchBar';\nimport MovieCard from './MovieCard';\nimport UserMovieListService from '../services/userMovieList.service';\nimport Pagination from '../components/Pagination';\n// import MovieListContainer from '../css/styled';\n\nexport const MovieList = () => {\n    const movieService = new MovieService();\n    const userMovieListService = new UserMovieListService();\n    const [selectedMovie, setSelectedMovie] = useState();\n    const [movieList, setMovieList] = useState();\n    const [pageCount, setPageCount] = useState();\n    const [movieTitle, setMovieTitle] = useState();\n    const [currentPage, setCurrentPage] = useState();\n    \n    const onAddToMovieList = async(movie) => {\n        await userMovieListService.addMovieToList(movie)\n    }\n    const getMoviesByTitle = async (title) => {\n        console.log(title);\n        setMovieTitle(title);\n        const movieList = await movieService.getMovieByTitle(title);\n        console.log(movieList);\n        setPageCount(Math.ceil(movieList.totalResults / 10));\n        setMovieList(movieList.Search);\n    } \n    \n    const getMoviesByPage = async (page) => {\n        setCurrentPage(page);\n        const movieList = await movieService.getMovieByTitle(movieTitle, page);\n        setMovieList(movieList.Search);\n    }\n\n    const onClose = () => setSelectedMovie(null);\n\n    const onSearch = (title) => {\n        console.log('onSearch')\n        getMoviesByTitle(title);\n       \n    }\n    return (\n        <div>\n            <SearchBar onSearch={onSearch}/>\n            { !selectedMovie && movieList && \n                <div>\n                    {\n                     movieList.map((movie) => {\n                        return(  \n                            <MovieCard movie={movie} setSelectedMovie={setSelectedMovie} onAddToMovieList ={() => onAddToMovieList(movie)}/>                               \n                    )                                                          \n                })                                                              \n        }\n        { pageCount && \n            <Pagination pageCount = {pageCount} getMoviesByPage={getMoviesByPage} currentPage= {currentPage}/>            \n        }\n     </div> \n    } \n        {\n            selectedMovie && (\n                <MovieModal show={selectedMovie} onClose={onClose}>\n                    <MovieDetails id={selectedMovie} />\n                </MovieModal>\n            )\n        }\n    </div>      \n)   \n}   \nexport default MovieList","import { useEffect, useState } from \"react\";\nimport UserMovieListService from \"../services/userMovieList.service\";\nimport MovieCard from \"./MovieCard\"\nimport MovieModal from \"./MovieModal\";\n\n\nexport const UserMovieList = () => {\n    const userMovieListService = new UserMovieListService();\n    const [userMovieList, setUserMovieList] = useState();\n    const [selectedMovie, setSelectedMovie] = useState();\n\n    useEffect(() => {\n       getMovieList();\n\n    }, [])\n\n    const getMovieList = async () => {\n        const movieList =await userMovieListService.getMovieList();\n        if (movieList) return setUserMovieList(movieList.list)\n    }\n\n        const deleteMovieFromList = (id) => {\n            userMovieListService.removeMovieFromList(id);\n            getMovieList()\n        }\n    return(\n        <div>\n            <h1>User Movie List</h1>\n            {! userMovieList && \n            <p>No Movies Available</p>\n            }\n            { userMovieList && userMovieList.map((movie) => {\n                return (\n                    <MovieCard movie={movie} setSelectedMovie={setSelectedMovie} onDeleteClick={deleteMovieFromList}/>\n                )\n            })}\n\n        </div>\n        \n    )\n  \n};\nexport default UserMovieList;","import  Navbar  from \"react-bootstrap/Navbar\";\nimport RBNav    from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\n\n\nexport const Nav = () => {\n    return(\n        <Navbar bg=\"warning\">\n            <Container>\n                <Navbar.Brand>Movie Data Base Tool</Navbar.Brand>\n                <Navbar.Collapse>\n                    <RBNav.Link href=\"/\" className=\"text-danger\">Movie Search</RBNav.Link>\n                    <RBNav.Link href=\"/user-movie-list\" className=\"text-success\">my Movie List</RBNav.Link>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\nexport default Nav","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  MovieList  from './components/MovieList';\nimport UserMovieList from './components/UserMovieList';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport Nav from './components/Nav';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n     <Nav />     \n      <Switch>\n        <Route exact path=\"/\" component={MovieList}/>\n        <Route exact path=\"/user-movie-list\" component={UserMovieList}/>\n      </Switch>\n     </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}